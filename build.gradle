buildscript {
    ext {
        groovyVersion = '2.3.7'
        springBootVersion = '1.2.0.BUILD-SNAPSHOT'
        springLoadedVersion = '1.2.0.RELEASE'
        oracleJDBCDriverVersion = '11.2.0.3'
        myBatisVersion = '3.2.7'
        myBatisSpringVersion = '1.2.2'
        spockVersion = '1.0-groovy-2.3-SNAPSHOT'
    }
    repositories {
        mavenCentral()
        maven { url 'http://repo.spring.io/snapshot' }
        maven { url 'http://repo.spring.io/milestone' }
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
        maven { url 'https://oss.sonatype.org/content/repositories/github-releases' }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.springframework:springloaded:${springLoadedVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'spring-boot'

mainClassName = 'com.digitalriver.catalog.api.Application'

jar {
    baseName = 'product-service'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

idea {
    module {
        inheritOutputDirs = false
        outputDir = file("$buildDir/classes/main/")
    }
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        if (details.requested.group == 'org.apache.tomcat.embed') {
            details.useVersion '8.0.3'
        }
    }
}

repositories {
    mavenCentral()
    maven { url "http://repo.spring.io/snapshot" }
    maven { url "http://repo.spring.io/milestone" }
    maven { url "http://gcartifacts.digitalriver.com/nexus/content/repositories/Internal1/" }

}

dependencies {
    compile("org.codehaus.groovy:groovy-all:${groovyVersion}")
    compile("org.springframework.boot:spring-boot-starter-aop")
    compile("org.springframework.boot:spring-boot-starter-jdbc")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-data-solr")
    compile("org.mybatis:mybatis:${myBatisVersion}")
    compile("org.mybatis:mybatis-spring:${myBatisSpringVersion}")
    compile("oracle:ojdbc6:${oracleJDBCDriverVersion}")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("org.spockframework:spock-core:${spockVersion}")
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.12'
}
